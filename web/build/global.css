@charset "UTF-8";

/*!
 * This file is part of oc_snowtricks project
 *
 * @author: Sébastien CHOMY <sebastien.chomy@gmail.com>
 * @since 2018/02
  * global.scss
 */

/*!
 * This file is part of oc_snowtricks project
 *
 * @author: Sébastien CHOMY <sebastien.chomy@gmail.com>
 * @since 2018/02
 * app.scss
 */

html {
  height: 100%;
}

body {
  display: grid;
  grid-template-rows: 56px 1fr 60px;
  grid-template-areas: "header" "main" "footer";
  min-height: 100%;
  width: 100%;
}

header {
  grid-area: header;
}

main {
  grid-area: main;
  min-height: 100%;
}

main > .i-container {
  height: 100%;
}

footer {
  grid-row-start: 3;
  grid-row-end: 4;
}

footer > .i-container {
  padding: 15px;
  vertical-align: bottom;
}

:root {
  --input-padding-x: .75rem;
  --input-padding-y: .75rem;
}

/** *********************
 *  FORM
 */

.form-group,
.form-label-group {
  position: relative;
  margin-bottom: 1rem;
}

.form-group > input,
.form-group > textarea,
.form-group > label {
  padding: var(--input-padding-y) var(--input-padding-x);
}

.form-group > label {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 100%;
  margin-bottom: 0;
  /* Override default `<label>` margin */
  line-height: 1.5;
  color: #495057;
  border: 1px solid transparent;
  border-radius: .25rem;
  transition: all .1s ease-in-out;
}

.form-group input::placeholder,
.form-group textarea::placeholder {
  color: transparent;
}

.form-group input:not(:placeholder-shown),
.form-group textarea:not(:placeholder-shown) {
  padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));
  padding-bottom: calc(var(--input-padding-y) / 3);
}

.form-group input:not(:placeholder-shown) ~ label,
.form-group textarea:not(:placeholder-shown) ~ label {
  padding-top: calc(var(--input-padding-y) / 3);
  padding-bottom: calc(var(--input-padding-y) / 3);
  font-size: 12px;
  color: #777777;
}

/** *********************
 * Steps
 */

.steps {
  background-color: #ffffff;
  border-radius: 4px;
}

.steps > .step {
  border-bottom: 1px solid rgba(34, 36, 38, 0.15);
  color: #cdcdcd;
  padding: 16px 28px 16px 28px;
}

.steps > .step > .ordered {
  font-size: 1.4rem;
  padding-right: 0.5em;
}

.steps > .step.active {
  color: #2e6da4;
}

/** *********************
 *  Login / Register page
 */

.v-container {
  display: flex;
  flex-direction: column;
  height: 100%;
  justify-content: center;
  align-items: center;
}

.form-signin {
  width: 100%;
  max-width: 420px;
  padding: 15px;
  margin: 0 auto;
}

/** ********************
 *   SECTION HEAD
 */

section#head {
  position: relative;
  height: 30vw;
  background-color: #afafaf;
}

section#head > img {
  background-origin: border-box;
  background-position: center center;
  background-size: cover;
  height: 100%;
  width: 100%;
}

section#head > div.actions {
  position: absolute;
  top: 1vw;
  right: 1vw;
  z-index: 1000;
}

section#head > div.titles {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  text-align: center;
}

section#head > div.titles > h3 {
  background-color: rgba(255, 255, 255, 0.5);
  padding: 0.8rem 1.2rem;
  border-radius: 8px;
}

/** ********************
 *   SECTION MEDIAS
 */

section#medias {
  margin-top: 2rem;
}

section#medias > .wrapper {
  margin-left: auto;
  margin-right: auto;
}

/** ********************
 *   SECTION CONTENT
 */

section#content {
  margin-top: 2rem;
}

/** ********************
 *   SECTION COMMENT
 */

section#comments {
  margin-top: 2rem;
}

/** ********************
 *   SECTION FORM
 */

section#form {
  margin-top: 2rem;
}

/** ********************
 *   card
 */

.st_card {
  position: relative;
  background-color: #fafafa;
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.12), 0 2px 2px rgba(0, 0, 0, 0.26);
  width: 18rem;
  height: 12rem;
  margin: 0.5rem;
  padding: 0.25rem;
  border: 1px solid #dee2e6;
  display: flex;
  flex-direction: column;
}

.st_card .form-group {
  margin-bottom: 0;
}

.st_card > .trash {
  position: absolute;
  top: 1vw;
  right: 1vw;
}

.st_card img {
  max-height: 11.5rem;
  margin-left: auto;
  margin-right: auto;
}

/** ***********************************
 *   UPLOAD
 */

.input_file-container {
  position: absolute;
  bottom: 0.1rem;
  left: 0.25rem;
  right: 0.25rem;
}

.input_file-container .input_file {
  height: 40px;
  line-height: 40px;
  top: 0;
  left: 0;
  width: 100%;
  opacity: 0;
  cursor: pointer;
}

.input_file-container .input_file-trigger {
  margin-bottom: 0;
  padding-top: 2px;
  padding-bottom: 2px;
  height: 40px;
  line-height: 40px;
  display: block;
  background: #6c757d;
  color: #ffffff;
  font-size: 1em;
  text-align: center;
  transition: all .4s;
  cursor: pointer;
}

.input_file-container .input_file-trigger > i {
  margin-right: 5px;
}

.input_file-container .input_file-trigger:hover {
  background-color: #34495e;
  color: #39d2b4;
}

/** ***********************************
 *   infinite scroll
 */

#infiniteScroll > a {
  display: inline-block;
}

#infiniteScroll > a > span {
  display: block;
  text-align: center;
}

/** ***********************************
 *   Comment
 */

.comment {
  margin-bottom: 1.5rem;
}

.comment > .content {
  display: block;
}

.comment > .avatar {
  display: block;
  width: 2.5rem;
  height: auto;
  float: left;
  margin: .2rem 0 0 0;
  border-radius: 0.25rem;
}

.comment > .avatar img,
.comment > .avatar img.avatar {
  display: block;
  margin: 0 auto 0 auto;
  width: 100%;
  height: 100%;
}

.comment > .avatar ~ .content {
  margin-left: 3.5rem;
}

/** ***********************************
 *   segment block
 */

.segment {
  padding: 1em 1.5em;
  background-color: #ffffff;
  border-top: 2px solid #2185d0;
  box-shadow: 0 2px 4px 0 rgba(34, 36, 38, 0.12);
}

/** ***********************************
 *   PAGE FIGURES posts list
 */

#page-figures section {
  display: grid;
  width: 100%;
  grid-template-rows: 1fr 70px;
  grid-template-areas: 'content' 'gutter';
}

#page-figures section > .content {
  grid-area: content;
}

#page-figures section > .gutter {
  grid-area: gutter;
  display: flex;
  justify-content: center;
  align-items: flex-start;
}

#page-figures section#head {
  background: url(../img/wintry.jpg) no-repeat;
  background-color: #66afe9;
  background-origin: border-box;
  background-position: center center;
  background-size: cover;
}

#page-figures .st_card img {
  max-height: 9rem;
}

/** ***********************************
 *   PAGE Profile edit
 */

#profile .photo {
  position: relative;
}

#profile .photo .input_file-container {
  left: 1.25rem;
  right: 1.25rem;
  bottom: 1.25rem;
}

#profile .photo .input_file-container .form-group {
  margin-bottom: 0;
}

/** ***********************************
 *  PAGE Resetting
 */

#page-resetting main {
  background-color: rgba(205, 205, 205, 0.73);
}

#page-resetting .segment {
  max-width: 360px;
}

/** ***********************************
 *  PAGE Registration
 */

#page-registration main {
  background-color: rgba(205, 205, 205, 0.73);
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/
